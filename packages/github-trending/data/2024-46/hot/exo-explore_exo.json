{
  "name": "exo-explore/exo",
  "description": "Run your own AI cluster at home with everyday devices üì±üíª üñ•Ô∏è‚åö",
  "stars": 14810,
  "forks": 794,
  "watchers": 14810,
  "mainLanguage": "Python",
  "languages": {
    "Python": 292936,
    "JavaScript": 22068,
    "HTML": 10974,
    "CSS": 10590,
    "Shell": 2082
  },
  "topics": [],
  "readme": "<div align=\"center\">\n\n<picture>\n  <source media=\"(prefers-color-scheme: light)\" srcset=\"/docs/exo-logo-black-bg.jpg\">\n  <img alt=\"exo logo\" src=\"/docs/exo-logo-transparent.png\" width=\"50%\" height=\"50%\">\n</picture>\n\nexo: Run your own AI cluster at home with everyday devices. Maintained by [exo labs](https://x.com/exolabs).\n\n\n<h3>\n\n[Discord](https://discord.gg/EUnjGpsmWw) | [Telegram](https://t.me/+Kh-KqHTzFYg3MGNk) | [X](https://x.com/exolabs)\n\n</h3>\n\n[![GitHub Repo stars](https://img.shields.io/github/stars/exo-explore/exo)](https://github.com/exo-explore/exo/stargazers)\n[![Tests](https://dl.circleci.com/status-badge/img/circleci/TrkofJDoGzdQAeL6yVHKsg/4i5hJuafuwZYZQxbRAWS71/tree/main.svg?style=svg)](https://dl.circleci.com/status-badge/redirect/circleci/TrkofJDoGzdQAeL6yVHKsg/4i5hJuafuwZYZQxbRAWS71/tree/main)\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n\n</div>\n\n---\n\nForget expensive NVIDIA GPUs, unify your existing devices into one powerful GPU: iPhone, iPad, Android, Mac, Linux, pretty much any device!\n\n<div align=\"center\">\n  <h2>Update: exo is hiring. See <a href=\"https://exolabs.net\">here</a> for more details.</h2>\n</div>\n\n## Get Involved\n\nexo is **experimental** software. Expect bugs early on. Create issues so they can be fixed. The [exo labs](https://x.com/exolabs) team will strive to resolve issues quickly.\n\nWe also welcome contributions from the community. We have a list of bounties in [this sheet](https://docs.google.com/spreadsheets/d/1cTCpTIp48UnnIvHeLEUNg1iMy_Q6lRybgECSFCoVJpE/edit?usp=sharing).\n\n## Features\n\n### Wide Model Support\n\nexo supports different models including LLaMA ([MLX](exo/inference/mlx/models/llama.py) and [tinygrad](exo/inference/tinygrad/models/llama.py)), Mistral, LlaVA, Qwen and Deepseek.\n\n### Dynamic Model Partitioning\n\nexo [optimally splits up models](exo/topology/ring_memory_weighted_partitioning_strategy.py) based on the current network topology and device resources available. This enables you to run larger models than you would be able to on any single device.\n\n### Automatic Device Discovery\n\nexo will [automatically discover](https://github.com/exo-explore/exo/blob/945f90f676182a751d2ad7bcf20987ab7fe0181e/exo/orchestration/standard_node.py#L154) other devices using the best method available. Zero manual configuration.\n\n### ChatGPT-compatible API\n\nexo provides a [ChatGPT-compatible API](exo/api/chatgpt_api.py) for running models. It's a [one-line change](examples/chatgpt_api.sh) in your application to run models on your own hardware using exo.\n\n### Device Equality\n\nUnlike other distributed inference frameworks, exo does not use a master-worker architecture. Instead, exo devices [connect p2p](https://github.com/exo-explore/exo/blob/945f90f676182a751d2ad7bcf20987ab7fe0181e/exo/orchestration/standard_node.py#L161). As long as a device is connected somewhere in the network, it can be used to run models.\n\nExo supports different [partitioning strategies](exo/topology/partitioning_strategy.py) to split up a model across devices. The default partitioning strategy is [ring memory weighted partitioning](exo/topology/ring_memory_weighted_partitioning_strategy.py). This runs an inference in a ring where each device runs a number of model layers proportional to the memory of the device.\n\n![\"A screenshot of exo running 5 nodes](docs/exo-screenshot.png)\n\n## Installation\n\nThe current recommended way to install exo is from source.\n\n### Prerequisites\n\n- Python>=3.12.0 is required because of [issues with asyncio](https://github.com/exo-explore/exo/issues/5) in previous versions.\n- Linux (with NVIDIA card):\n  - NVIDIA driver (test with `nvidia-smi`)\n  - CUDA (https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#cuda-cross-platform-installation) (test with `nvcc --version`)\n  - cuDNN (https://developer.nvidia.com/cudnn-downloads) (test with [link](https://docs.nvidia.com/deeplearning/cudnn/latest/installation/linux.html#verifying-the-install-on-linux:~:text=at%20a%20time.-,Verifying%20the%20Install%20on%20Linux,Test%20passed!,-Upgrading%20From%20Older))\n\n### Hardware Requirements\n\n- The only requirement to run exo is to have enough memory across all your devices to fit the entire model into memory. For example, if you are running llama 3.1 8B (fp16), you need 16GB of memory across all devices. Any of the following configurations would work since they each have more than 16GB of memory in total:\n  - 2 x 8GB M3 MacBook Airs\n  - 1 x 16GB NVIDIA RTX 4070 Ti Laptop\n  - 2 x Raspberry Pi 400 with 4GB of RAM each (running on CPU) + 1 x 8GB Mac Mini\n- exo is designed to run on devices with heterogeneous capabilities. For example, you can have some devices with powerful GPUs and others with integrated GPUs or even CPUs. Adding less capable devices will slow down individual inference latency but will increase the overall throughput of the cluster.\n\n### From source\n\n\n```sh\ngit clone https://github.com/exo-explore/exo.git\ncd exo\npip install -e .\n# alternatively, with venv\nsource install.sh\n```\n\n\n### Troubleshooting\n\n- If running on Mac, MLX has an [install guide](https://ml-explore.github.io/mlx/build/html/install.html) with troubleshooting steps.\n\n### Performance\n\n- There are a number of things users have empirically found to improve performance on Apple Silicon Macs:\n\n1. Upgrade to the latest version of MacOS 15.\n2. Run `./configure_mlx.sh`. This runs commands to optimize GPU memory allocation on Apple Silicon Macs.\n\n\n## Documentation\n\n### Example Usage on Multiple MacOS Devices\n\n#### Device 1:\n\n```sh\nexo\n```\n\n#### Device 2:\n```sh\nexo\n```\n\nThat's it! No configuration required - exo will automatically discover the other device(s).\n\nexo starts a ChatGPT-like WebUI (powered by [tinygrad tinychat](https://github.com/tinygrad/tinygrad/tree/master/examples/tinychat)) on http://localhost:52415\n\nFor developers, exo also starts a ChatGPT-compatible API endpoint on http://localhost:52415/v1/chat/completions. Examples with curl:\n\n#### Llama 3.2 3B:\n\n```sh\ncurl http://localhost:52415/v1/chat/completions \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n     \"model\": \"llama-3.2-3b\",\n     \"messages\": [{\"role\": \"user\", \"content\": \"What is the meaning of exo?\"}],\n     \"temperature\": 0.7\n   }'\n```\n\n#### Llama 3.1 405B:\n\n```sh\ncurl http://localhost:52415/v1/chat/completions \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n     \"model\": \"llama-3.1-405b\",\n     \"messages\": [{\"role\": \"user\", \"content\": \"What is the meaning of exo?\"}],\n     \"temperature\": 0.7\n   }'\n```\n\n#### Llava 1.5 7B (Vision Language Model):\n\n```sh\ncurl http://localhost:52415/v1/chat/completions \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n     \"model\": \"llava-1.5-7b-hf\",\n     \"messages\": [\n      {\n        \"role\": \"user\",\n        \"content\": [\n          {\n            \"type\": \"text\",\n            \"text\": \"What are these?\"\n          },\n          {\n            \"type\": \"image_url\",\n            \"image_url\": {\n              \"url\": \"http://images.cocodataset.org/val2017/000000039769.jpg\"\n            }\n          }\n        ]\n      }\n    ],\n     \"temperature\": 0.0\n   }'\n```\n\n### Example Usage on Multiple Heterogenous Devices (MacOS + Linux)\n\n#### Device 1 (MacOS):\n\n```sh\nexo --inference-engine tinygrad\n```\n\nHere we explicitly tell exo to use the **tinygrad** inference engine.\n\n#### Device 2 (Linux):\n```sh\nexo\n```\n\nLinux devices will automatically default to using the **tinygrad** inference engine.\n\nYou can read about tinygrad-specific env vars [here](https://docs.tinygrad.org/env_vars/). For example, you can configure tinygrad to use the cpu by specifying `CLANG=1`.\n\n### Example Usage on a single device with \"exo run\" command\n\n```sh\nexo run llama-3.2-3b\n```\n\nWith a custom prompt:\n\n```sh\nexo run llama-3.2-3b --prompt \"What is the meaning of exo?\"\n```\n\n### Model Storage\n\nModels by default are stored in `~/.cache/huggingface/hub`.\n\nYou can set a different model storage location by setting the `HF_HOME` env var.\n\n## Debugging\n\nEnable debug logs with the DEBUG environment variable (0-9).\n\n```sh\nDEBUG=9 exo\n```\n\nFor the **tinygrad** inference engine specifically, there is a separate DEBUG flag `TINYGRAD_DEBUG` that can be used to enable debug logs (1-6).\n\n```sh\nTINYGRAD_DEBUG=2 exo\n```\n\n## Formatting\n\nWe use [yapf](https://github.com/google/yapf) to format the code. To format the code, first install the formatting requirements:\n\n```sh\npip3 install -e '.[formatting]'\n```\n\nThen run the formatting script:\n\n```sh\npython3 format.py ./exo\n```\n\n## Known Issues\n\n- On some versions of MacOS/Python, certificates are not installed properly which can lead to SSL errors (e.g. SSL error with huggingface.co). To fix this, run the Install Certificates command, usually:\n\n```sh\n/Applications/Python 3.x/Install Certificates.command\n```\n\n- üöß As the library is evolving so quickly, the iOS implementation has fallen behind Python. We have decided for now not to put out the buggy iOS version and receive a bunch of GitHub issues for outdated code. We are working on solving this properly and will make an announcement when it's ready. If you would like access to the iOS implementation now, please email alex@exolabs.net with your GitHub username explaining your use-case and you will be granted access on GitHub.\n\n## Inference Engines\n\nexo supports the following inference engines:\n\n- ‚úÖ [MLX](exo/inference/mlx/sharded_inference_engine.py)\n- ‚úÖ [tinygrad](exo/inference/tinygrad/inference.py)\n- üöß [PyTorch](https://github.com/exo-explore/exo/pull/139)\n- üöß [llama.cpp](https://github.com/exo-explore/exo/issues/167)\n\n## Networking Modules\n\n- ‚úÖ [GRPC](exo/networking/grpc)\n- üöß [Radio](TODO)\n- üöß [Bluetooth](TODO)\n",
  "homepage": "",
  "defaultBranch": "main",
  "hasIssues": true,
  "hasWiki": false,
  "license": "GNU General Public License v3.0",
  "createdAt": "2024-06-24T18:36:22Z",
  "updatedAt": "2024-11-17T11:43:39Z",
  "pushedAt": "2024-11-16T08:00:38Z",
  "url": "https://github.com/exo-explore/exo",
  "gitUrl": "git://github.com/exo-explore/exo.git",
  "sshUrl": "git@github.com:exo-explore/exo.git",
  "owner": {
    "name": "exo-explore",
    "avatarUrl": "https://avatars.githubusercontent.com/u/162823259?v=4",
    "url": "https://github.com/exo-explore"
  }
}